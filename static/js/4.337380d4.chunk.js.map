{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Message/DialogsForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","to","id","activeClassName","name","Message","message","maxLength","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsItem","dialogs","map","d","i","messagesItem","messages","value","AddMessage","newMessage","DialogsContainer","connect","state","dialogsPage","dispatch","AddMessageTextAC","compose","withAuthRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,6B,oBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,oGCgBhIC,EARI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAQC,OAAO,IAAID,IAAQE,OAA3C,SACI,cAAC,IAAD,CAASC,GAAI,YAAaL,EAAMM,GAAIC,gBAAiB,SAArD,SAAgEP,EAAMQ,UCInEC,EATC,SAACT,GAEb,OACI,8BACI,qBAAKC,UAAWC,IAAQQ,QAAxB,SAAkCV,EAAMU,a,mCCF9CC,EAAYC,YAAiB,KAkBpBC,EAFUC,YAA2B,CAACC,KAAM,WAAlCD,EAdF,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAYH,KAAK,aAC3De,YAAY,yBAEvB,8BACI,qDCYDC,EAtBC,SAACxB,GACb,IAAIyB,EAAczB,EAAM0B,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAAoBrB,KAAMoB,EAAEpB,KAAMF,GAAIsB,EAAEtB,IAAvBuB,MAC3DC,EAAe9B,EAAM+B,SAASJ,KAAI,SAACjB,EAASmB,GAAV,OAAgB,cAAC,EAAD,CAAiBnB,QAASA,EAAQA,SAApBmB,MAMpE,OACI,sBAAK5B,UAAWC,IAAQwB,QAAxB,UACI,qBAAKzB,UAAWC,IAAQuB,YAAxB,SACKA,IAEL,sBAAKxB,UAAWC,IAAQ6B,SAAxB,UACKD,EACD,cAAC,EAAD,CAAkBd,SAXJ,SAACgB,GACvBhC,EAAMiC,WAAWD,EAAME,sB,kCCYzBC,EAAmBC,aAlBD,SAACC,GACrB,MAAO,CACHX,QAASW,EAAMC,YAAYZ,QAC3BK,SAAUM,EAAMC,YAAYP,aAOT,SAACQ,GACxB,MAAO,CACHN,WAAY,SAACD,GACTO,EAASC,YAAiBR,SAOvBS,sBACXN,EACAO,IAFWD,CAGbjB","file":"static/js/4.337380d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"DialogItem_message__1NBo0\",\"dialog\":\"DialogItem_dialog__1ij5D\",\"active\":\"DialogItem_active__1mV1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1IBxs\",\"dialogsItem\":\"Dialogs_dialogsItem__2kn3U\",\"messages\":\"Dialogs_messages__1ELCw\",\"message\":\"Dialogs_message__3F1S6\"};","import React from \"react\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemType) => {\r\n    return(\r\n        <div className={classes.dialog+' '+classes.active}>\r\n            <NavLink to={\"/dialogs/\"+ props.id} activeClassName={'active'}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"../DialogItem/DialogItem.module.css\";\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\n\r\nexport type MessageFormType = {\r\n    newMessage: string\r\n}\r\n\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props: InjectedFormProps<MessageFormType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength]} name='newMessage'\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm<MessageFormType>({form: 'dialogs'})(AddMessageForm)\r\n\r\nexport default DialogsReduxForm\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {mapDispatchToPropsType, mapStateToPropsType} from \"./DialogsContainer\";\r\nimport DialogsReduxForm, {MessageFormType} from \"./Message/DialogsForm\";\r\n\r\ntype DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    let dialogsItem = props.dialogs.map((d, i) => <DialogItem key={i} name={d.name} id={d.id}/>)\r\n    let messagesItem = props.messages.map((message, i) => <Message key={i} message={message.message}/>)\r\n\r\n    const addMessageHandler = (value: MessageFormType) => {\r\n        props.AddMessage(value.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItem}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesItem}\r\n                <DialogsReduxForm onSubmit={addMessageHandler}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport {AddMessageTextAC, initialStateTypeofDialogs} from \"../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStoreType} from \"../../Redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nexport type mapStateToPropsType = initialStateTypeofDialogs\r\nconst mapStateToProps = (state: AppRootStoreType): initialStateTypeofDialogs => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\nexport type mapDispatchToPropsType = {\r\n    AddMessage: (value: string) => void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        AddMessage: (value) => {\r\n            dispatch(AddMessageTextAC(value))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)\r\n\r\nexport default compose<React.ComponentType>(\r\n    DialogsContainer,\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}